{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/helper.service\";\nimport * as i3 from \"@angular/forms\";\nexport class NewNoteComponent {\n  constructor(router, server) {\n    this.router = router;\n    this.server = server;\n    this.now = new Date();\n  }\n  // submit new note to be formatted and input into data.json file\n  onSubmit(data) {\n    console.log(data);\n    let newNote = {\n      title: data.controls.title.value,\n      body: data.controls.body.value,\n      dataCreated: this.now,\n      favorite: false\n    };\n    this.server.addNote(newNote).subscribe(query => {\n      if (query) {\n        this.router.navigate(['notes']);\n        alert('note has been successfully added. redirecting user to homepage.');\n        this.router.navigate(['/home']);\n      } else {\n        alert('Unable to successfully add new note.');\n      }\n    });\n  }\n}\n_class = NewNoteComponent;\n_class.ɵfac = function NewNoteComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HelperService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-new-note\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[1, \"container-sm\", \"align-items-center\", \"justify-content-center\", \"p-3\"], [1, \"border\", \"border-3\", \"border-secondary\", \"rounded\", \"px-4\", \"p-3\"], [3, \"ngSubmit\"], [\"newNoteIntake\", \"ngForm\"], [1, \"row\", \"mx-auto\", 2, \"width\", \"750px\"], [1, \".col-auto\", \".me-auto\"], [1, \"text-left\"], [\"ngModel\", \"\", \"name\", \"title\", \"required\", \"\", 1, \"firsttext\"], [\"title\", \"ngModel\"], [\"ngModel\", \"\", \"name\", \"body\", \"required\", \"\", 1, \"bodytext\"], [\"body\", \"ngModel\"], [1, \"move\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\", 2, \"width\", \"750px\", 3, \"disabled\"]],\n  template: function NewNoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function NewNoteComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"h2\", 6);\n      i0.ɵɵtext(8, \"Title \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"h2\", 6);\n      i0.ɵɵtext(13, \"Body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"textarea\", 9, 10);\n      i0.ɵɵtext(16, \"testing this i guess\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"button\", 12);\n      i0.ɵɵtext(19, \"Add Note\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"disabled\", _r0.form.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".firsttext[_ngcontent-%COMP%]{ \\n    resize:none;\\n    width: 800px; \\n    min-width:800px; \\n    max-width:900px; \\n  \\n    height:30px; \\n    min-height:30px;  \\n    max-height:30px;\\n  }\\n\\n  .bodytext[_ngcontent-%COMP%]{ \\n    resize:none;\\n    width: 800px; \\n    min-width:800px; \\n    max-width:800px; \\n  \\n    height:300px; \\n    min-height:300px;  \\n    max-height:700px;\\n  }\\n\\n\\n  .move[_ngcontent-%COMP%]{\\n    margin-left: auto;\\n    width: 955px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZXBhZ2UvbmV3LW5vdGUvbmV3LW5vdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtJQUNmLGVBQWU7O0lBRWYsV0FBVztJQUNYLGVBQWU7SUFDZixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsZUFBZTs7SUFFZixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGdCQUFnQjtFQUNsQjs7O0VBR0E7SUFDRSxpQkFBaUI7SUFDakIsWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmZpcnN0dGV4dHsgXG4gICAgcmVzaXplOm5vbmU7XG4gICAgd2lkdGg6IDgwMHB4OyBcbiAgICBtaW4td2lkdGg6ODAwcHg7IFxuICAgIG1heC13aWR0aDo5MDBweDsgXG4gIFxuICAgIGhlaWdodDozMHB4OyBcbiAgICBtaW4taGVpZ2h0OjMwcHg7ICBcbiAgICBtYXgtaGVpZ2h0OjMwcHg7XG4gIH1cblxuICAuYm9keXRleHR7IFxuICAgIHJlc2l6ZTpub25lO1xuICAgIHdpZHRoOiA4MDBweDsgXG4gICAgbWluLXdpZHRoOjgwMHB4OyBcbiAgICBtYXgtd2lkdGg6ODAwcHg7IFxuICBcbiAgICBoZWlnaHQ6MzAwcHg7IFxuICAgIG1pbi1oZWlnaHQ6MzAwcHg7ICBcbiAgICBtYXgtaGVpZ2h0OjcwMHB4O1xuICB9XG5cblxuICAubW92ZXtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICB3aWR0aDogOTU1cHg7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["NewNoteComponent","constructor","router","server","now","Date","onSubmit","data","console","log","newNote","title","controls","value","body","dataCreated","favorite","addNote","subscribe","query","navigate","alert","i0","ɵɵdirectiveInject","i1","Router","i2","HelperService","selectors","decls","vars","consts","template","NewNoteComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵlistener","NewNoteComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","form","invalid"],"sources":["/Users/katrinathielen/Desktop/Angular Project 1/Notes/src/app/homepage/new-note/new-note.component.ts","/Users/katrinathielen/Desktop/Angular Project 1/Notes/src/app/homepage/new-note/new-note.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { HelperService } from 'src/app/services/helper.service';\n\n@Component({\n  selector: 'app-new-note',\n  templateUrl: './new-note.component.html',\n  styleUrls: ['./new-note.component.css']\n})\nexport class NewNoteComponent {\n\n  now = new Date();\n\n  constructor(private router:Router, private server:HelperService){}\n  // submit new note to be formatted and input into data.json file\n  onSubmit(data: any){\n    console.log(data)\n    let newNote = {\n      title: data.controls.title.value,\n      body: data.controls.body.value,\n      dataCreated: this.now,\n      favorite: false\n    }\n    this.server.addNote(newNote).subscribe(query=>{\n      if (query){\n        this.router.navigate(['notes']);\n        alert('note has been successfully added. redirecting user to homepage.')\n        this.router.navigate(['/home']);\n      }\n      else {\n        alert('Unable to successfully add new note.')\n      }\n    })\n  }\n}\n","<br>\n<div class=\"container-sm align-items-center justify-content-center p-3\">\n    <div class=\"border border-3 border-secondary rounded px-4 p-3\">\n        <!-- reactive form 'newNoteIntake' to intake and append notes array in data.json-->\n        <form #newNoteIntake=\"ngForm\" (ngSubmit)=\"onSubmit(newNoteIntake)\">\n            <div class=\"row mx-auto\" style=\"width: 750px\">\n                <div class=\".col-auto .me-auto\">\n                    <h2 class=\"text-left\">Title </h2>\n                    <!-- title input required -->\n                    <input ngModel name=\"title\" #title=\"ngModel\" class=\"firsttext\" required>\n                </div>\n                <div class=\".col-auto .me-auto\">\n                    <h2 class=\"text-left\">Body</h2>\n                    <!-- body input required -->\n                    <textarea class=\"form-control\" ngModel name=\"body\" #body=\"ngModel\" class=\"bodytext\"required>testing this i guess</textarea>\n                </div>\n            </div>\n            <div class=\"move\">\n                <!-- submit 'newNoteIntake' form to add the note to data.json -->\n                <button type=\"submit\" class=\"btn btn-outline-secondary\" style=\"width:750px\" [disabled]=\"newNoteIntake.form.invalid\">Add Note</button>\n            </div>\n        </form>\n    </div>\n</div>\n"],"mappings":";;;;;AASA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,MAAa,EAAUC,MAAoB;IAA3C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,MAAM,GAANA,MAAM;IAFjD,KAAAC,GAAG,GAAG,IAAIC,IAAI,EAAE;EAEiD;EACjE;EACAC,QAAQA,CAACC,IAAS;IAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIG,OAAO,GAAG;MACZC,KAAK,EAAEJ,IAAI,CAACK,QAAQ,CAACD,KAAK,CAACE,KAAK;MAChCC,IAAI,EAAEP,IAAI,CAACK,QAAQ,CAACE,IAAI,CAACD,KAAK;MAC9BE,WAAW,EAAE,IAAI,CAACX,GAAG;MACrBY,QAAQ,EAAE;KACX;IACD,IAAI,CAACb,MAAM,CAACc,OAAO,CAACP,OAAO,CAAC,CAACQ,SAAS,CAACC,KAAK,IAAE;MAC5C,IAAIA,KAAK,EAAC;QACR,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/BC,KAAK,CAAC,iEAAiE,CAAC;QACxE,IAAI,CAACnB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MACI;QACHC,KAAK,CAAC,sCAAsC,CAAC;;IAEjD,CAAC,CAAC;EACJ;;SAxBWrB,gBAAgB;;mBAAhBA,MAAgB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAAhB3B,MAAgB;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCT7BZ,EAAA,CAAAc,SAAA,SAAI;MACJd,EAAA,CAAAe,cAAA,aAAwE;MAGlCf,EAAA,CAAAgB,UAAA,sBAAAC,mDAAA;QAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAApB,EAAA,CAAAqB,WAAA;QAAA,OAAYrB,EAAA,CAAAsB,WAAA,CAAAT,GAAA,CAAA7B,QAAA,CAAAoC,GAAA,CAAuB;MAAA,EAAC;MAC9DpB,EAAA,CAAAe,cAAA,aAA8C;MAEhBf,EAAA,CAAAuB,MAAA,aAAM;MAAAvB,EAAA,CAAAwB,YAAA,EAAK;MAEjCxB,EAAA,CAAAc,SAAA,kBAAwE;MAC5Ed,EAAA,CAAAwB,YAAA,EAAM;MACNxB,EAAA,CAAAe,cAAA,cAAgC;MACNf,EAAA,CAAAuB,MAAA,YAAI;MAAAvB,EAAA,CAAAwB,YAAA,EAAK;MAE/BxB,EAAA,CAAAe,cAAA,uBAA4F;MAAAf,EAAA,CAAAuB,MAAA,4BAAoB;MAAAvB,EAAA,CAAAwB,YAAA,EAAW;MAGnIxB,EAAA,CAAAe,cAAA,eAAkB;MAEsGf,EAAA,CAAAuB,MAAA,gBAAQ;MAAAvB,EAAA,CAAAwB,YAAA,EAAS;;;;MAAzDxB,EAAA,CAAAyB,SAAA,IAAuC;MAAvCzB,EAAA,CAAA0B,UAAA,aAAAN,GAAA,CAAAO,IAAA,CAAAC,OAAA,CAAuC"},"metadata":{},"sourceType":"module","externalDependencies":[]}